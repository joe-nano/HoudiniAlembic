# This code is called when instances of this object cook.
import _alembic_hom_extensions as _ahe
import os
self = hou.pwd()
abcPath = self.hdaModule().GetFileName(self)
objPath = self.evalParm('objectPath')
fetchworldxform = self.evalParm('fetchworldxform')

cacheKey = repr((fetchworldxform, abcPath, objPath))

cacheTuple = self.hdaModule().GetConstantXform(self)

if isinstance(cacheTuple, tuple) and cacheTuple[0] == cacheKey:
    hou.pwd().setCookTransform(cacheTuple[1])
else:
    frameParm = self.parm('frame')
    fpsParm = self.parm('fps')
    sampleTime = frameParm.eval() / fpsParm.eval()
    if fetchworldxform:
        xform, isConstant, inherit = _ahe.getWorldXform(abcPath, objPath, sampleTime)
        m = hou.Matrix4(xform)
    else:
        xform, isConstant, inherit = _ahe.getLocalXform(abcPath, objPath, sampleTime)
        m = hou.Matrix4(xform)
        if not inherit:
            parentPath = os.path.split(objPath)[0]
            parent = _ahe.getWorldXform(abcPath, parentPath, sampleTime)
            if parent:
                p = hou.Matrix4(parent[0])
                m *= p.inverted()
                isConstant &= parent[1]
    hou.pwd().setCookTransform(m)

    if isConstant:
        self.hdaModule().SetConstantXform(self, (cacheKey, m))
